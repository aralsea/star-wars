import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { GetServerSideProps, InferGetServerSidePropsType } from "next";
import Link from "next/link";
import { useMemo } from "react";
const inter = Inter({ subsets: ["latin"] });

export default function People({
  people,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  const listItems = useMemo(() => {
    return people.map((person) => (
      <li key={person.url}>
        <Link href={"/ssr/" + url2id(person.url)}>{person.name}</Link>
      </li>
    ));
  }, [people]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <ol>{listItems}</ol>
      </main>
    </>
  );
}

function url2id(url: string) {
  const regex = /people\/(\d+)/;

  // 正規表現を使用してURLを検索
  const match = url.match(regex);

  if (match) {
    // マッチした場合、マッチした全体の文字列が望む値
    return match[0];
  } else {
    // マッチしなかった場合の処理
    console.log("No match found");
  }
}

//get the array of all the people
export const getServerSideProps = (async () => {
  const targets = Array.from(
    { length: 9 },
    (_, i) => `https://swapi.dev/api/people/?page=${i + 1}`
  );

  console.log(targets);
  let people: Person[] = [];

  const peopleArray: Person[][] = await Promise.all(
    targets.map((url) => {
      return fetch(url).then((response) => response.json());
    })
  ).then((repos) => {
    return repos.map((repo) => repo.results);
  });

  for (const tmpPeople of peopleArray) {
    people = people.concat(tmpPeople);
  }

  return { props: { people } };
}) satisfies GetServerSideProps<{ people: Person[] }>;
